// Code generated by "stringer -type=Mode"; DO NOT EDIT.

package ins

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Implied-1]
	_ = x[Accumulator-2]
	_ = x[Immediate-4]
	_ = x[ZeroPage-8]
	_ = x[ZeroPageX-16]
	_ = x[ZeroPageY-32]
	_ = x[Relative-64]
	_ = x[Absolute-128]
	_ = x[AbsoluteX-256]
	_ = x[AbsoluteY-512]
	_ = x[Indirect-1024]
	_ = x[IndirectX-2048]
	_ = x[IndirectY-4096]
}

const _Mode_name = "ImpliedAccumulatorImmediateZeroPageZeroPageXZeroPageYRelativeAbsoluteAbsoluteXAbsoluteYIndirectIndirectXIndirectY"

var _Mode_map = map[Mode]string{
	1:    _Mode_name[0:7],
	2:    _Mode_name[7:18],
	4:    _Mode_name[18:27],
	8:    _Mode_name[27:35],
	16:   _Mode_name[35:44],
	32:   _Mode_name[44:53],
	64:   _Mode_name[53:61],
	128:  _Mode_name[61:69],
	256:  _Mode_name[69:78],
	512:  _Mode_name[78:87],
	1024: _Mode_name[87:95],
	2048: _Mode_name[95:104],
	4096: _Mode_name[104:113],
}

func (i Mode) String() string {
	if str, ok := _Mode_map[i]; ok {
		return str
	}
	return "Mode(" + strconv.FormatInt(int64(i), 10) + ")"
}
